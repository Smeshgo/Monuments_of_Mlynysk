// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Monuments_of_Mlynysk.Models;

namespace Monuments_of_Mlynysk.Migrations
{
    [DbContext(typeof(MonumentDBContext))]
    [Migration("20210609183120_foo")]
    partial class foo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Ukrainian_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.Appointment", b =>
                {
                    b.Property<long>("IdAppointment")
                        .HasColumnType("bigint")
                        .HasColumnName("id_appointment");

                    b.Property<DateTime?>("CreateAppointment")
                        .HasColumnType("datetime")
                        .HasColumnName("create_appointment");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("Update")
                        .HasColumnType("datetime")
                        .HasColumnName("update");

                    b.HasKey("IdAppointment")
                        .HasName("PK_appointment");

                    b.ToTable("Appointment");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.Article", b =>
                {
                    b.Property<long>("IdArticle")
                        .HasColumnType("bigint")
                        .HasColumnName("id_article");

                    b.Property<string>("Contents")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("contents");

                    b.Property<DateTime?>("CreateArticle")
                        .HasColumnType("datetime")
                        .HasColumnName("create_article");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdateArticle")
                        .HasColumnType("datetime")
                        .HasColumnName("update_article");

                    b.HasKey("IdArticle")
                        .HasName("PK_article");

                    b.ToTable("Article");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.ArticleUser", b =>
                {
                    b.Property<long>("IdArticle")
                        .HasColumnType("bigint")
                        .HasColumnName("id_article");

                    b.Property<long>("IdUser")
                        .HasColumnType("bigint")
                        .HasColumnName("id_user");

                    b.HasKey("IdArticle", "IdUser")
                        .HasName("PK_article_user");

                    b.HasIndex(new[] { "IdArticle" }, "fkIdx_252");

                    b.HasIndex(new[] { "IdUser" }, "fkIdx_256");

                    b.ToTable("Article_user");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.CategoryMaterial", b =>
                {
                    b.Property<long>("IdCategoryMaterial")
                        .HasColumnType("bigint")
                        .HasColumnName("id_category_material");

                    b.Property<DateTime?>("CreateCategoryMaterial")
                        .HasColumnType("datetime")
                        .HasColumnName("create_category_material");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("name");

                    b.HasKey("IdCategoryMaterial")
                        .HasName("PK_category_material");

                    b.ToTable("Category_material");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.CategoryPhoto", b =>
                {
                    b.Property<long>("IdCategoryPhoto")
                        .HasColumnType("bigint")
                        .HasColumnName("id_Category_Photo");

                    b.Property<DateTime?>("CreatePhotoPhoto")
                        .HasColumnType("datetime")
                        .HasColumnName("create_photo_photo");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdateCategoryPhoto")
                        .HasColumnType("datetime")
                        .HasColumnName("update_category_photo");

                    b.HasKey("IdCategoryPhoto")
                        .HasName("PK_category_photo");

                    b.ToTable("Category_Photo");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.Material", b =>
                {
                    b.Property<long>("IdMaterial")
                        .HasColumnType("bigint")
                        .HasColumnName("id_material");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("color");

                    b.Property<DateTime?>("CreateMaterial")
                        .HasColumnType("datetime")
                        .HasColumnName("create_material");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("height");

                    b.Property<long>("IdAppointment")
                        .HasColumnType("bigint")
                        .HasColumnName("id_appointment");

                    b.Property<long>("IdCategoryMaterial")
                        .HasColumnType("bigint")
                        .HasColumnName("id_category_material");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("length");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<decimal>("Number")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("price");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdateUser")
                        .HasColumnType("datetime")
                        .HasColumnName("update_user");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("width");

                    b.HasKey("IdMaterial")
                        .HasName("PK_material");

                    b.HasIndex(new[] { "IdAppointment" }, "fkIdx_288");

                    b.HasIndex(new[] { "IdCategoryMaterial" }, "fkIdx_297");

                    b.ToTable("Material");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.MaterialMonument", b =>
                {
                    b.Property<long>("MaterialMonument1")
                        .HasColumnType("bigint")
                        .HasColumnName("Material_monument");

                    b.Property<long>("IdMonument")
                        .HasColumnType("bigint")
                        .HasColumnName("id_monument");

                    b.Property<long>("IdMaterial")
                        .HasColumnType("bigint")
                        .HasColumnName("id_material");

                    b.HasKey("MaterialMonument1", "IdMonument", "IdMaterial")
                        .HasName("PK_material_monument");

                    b.HasIndex(new[] { "IdMonument" }, "fkIdx_276");

                    b.HasIndex(new[] { "IdMaterial" }, "fkIdx_279");

                    b.ToTable("Material_monument");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.Monument", b =>
                {
                    b.Property<long>("IdMonument")
                        .HasColumnType("bigint")
                        .HasColumnName("id_monument");

                    b.Property<long>("IdPhoto")
                        .HasColumnType("bigint")
                        .HasColumnName("id_photo");

                    b.Property<decimal>("Prise")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("prise");

                    b.HasKey("IdMonument")
                        .HasName("PK_monument");

                    b.HasIndex(new[] { "IdPhoto" }, "fkIdx_179");

                    b.ToTable("Monument");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.MonumentWorker", b =>
                {
                    b.Property<long>("IdMonument")
                        .HasColumnType("bigint")
                        .HasColumnName("id_monument");

                    b.Property<long>("IdWorker")
                        .HasColumnType("bigint")
                        .HasColumnName("id_worker");

                    b.HasKey("IdMonument", "IdWorker")
                        .HasName("PK_monument_worker");

                    b.HasIndex(new[] { "IdMonument" }, "fkIdx_172");

                    b.HasIndex(new[] { "IdWorker" }, "fkIdx_176");

                    b.ToTable("Monument_Worker");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.Photo", b =>
                {
                    b.Property<long>("IdPhoto")
                        .HasColumnType("bigint")
                        .HasColumnName("id_photo");

                    b.Property<DateTime?>("CreatePhoto")
                        .HasColumnType("datetime")
                        .HasColumnName("create_photo");

                    b.Property<long>("IdCategoryPhoto")
                        .HasColumnType("bigint")
                        .HasColumnName("id_Category_Photo");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("name");

                    b.Property<string>("PathFull")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("path_full");

                    b.Property<string>("PathMini")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("path_mini");

                    b.Property<DateTime?>("UpdatePhoto")
                        .HasColumnType("datetime")
                        .HasColumnName("update_photo");

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("uuid");

                    b.HasKey("IdPhoto")
                        .HasName("PK_photo");

                    b.HasIndex(new[] { "IdCategoryPhoto" }, "fkIdx_188");

                    b.ToTable("Photo");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.PhotoArticle", b =>
                {
                    b.Property<long>("IdPhoto")
                        .HasColumnType("bigint")
                        .HasColumnName("id_photo");

                    b.Property<long>("IdArticle")
                        .HasColumnType("bigint")
                        .HasColumnName("id_article");

                    b.HasKey("IdPhoto", "IdArticle")
                        .HasName("PK_photo_article");

                    b.HasIndex(new[] { "IdPhoto" }, "fkIdx_199");

                    b.HasIndex(new[] { "IdArticle" }, "fkIdx_203");

                    b.ToTable("Photo_article");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.Role", b =>
                {
                    b.Property<long>("IdRole")
                        .HasColumnType("bigint")
                        .HasColumnName("id_role");

                    b.Property<DateTime?>("CreateRole")
                        .HasColumnType("datetime")
                        .HasColumnName("create_role");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdateRole")
                        .HasColumnType("datetime")
                        .HasColumnName("update_role");

                    b.HasKey("IdRole");

                    b.ToTable("role");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.User", b =>
                {
                    b.Property<long>("IdUser")
                        .HasColumnType("bigint")
                        .HasColumnName("id_user");

                    b.Property<DateTime>("Create")
                        .HasColumnType("datetime")
                        .HasColumnName("create");

                    b.Property<DateTime?>("CreateUser")
                        .HasColumnType("datetime")
                        .HasColumnName("create_user");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("firstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("lastName");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<DateTime>("Update")
                        .HasColumnType("datetime")
                        .HasColumnName("update");

                    b.Property<DateTime?>("UpdateUser")
                        .HasColumnType("datetime")
                        .HasColumnName("update_user");

                    b.Property<string>("Usernama")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usernama");

                    b.HasKey("IdUser")
                        .HasName("PK_user");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.UserRole", b =>
                {
                    b.Property<long>("IdRole")
                        .HasColumnType("bigint")
                        .HasColumnName("id_role");

                    b.Property<long>("IdUser")
                        .HasColumnType("bigint")
                        .HasColumnName("id_user");

                    b.HasKey("IdRole", "IdUser");

                    b.HasIndex(new[] { "IdRole" }, "fkIdx_246");

                    b.HasIndex(new[] { "IdUser" }, "fkIdx_249");

                    b.ToTable("user_role");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.Worker", b =>
                {
                    b.Property<long>("IdWorker")
                        .HasColumnType("bigint")
                        .HasColumnName("id_worker");

                    b.Property<DateTime?>("CreateWorcer")
                        .HasColumnType("datetime")
                        .HasColumnName("create_worcer");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("firstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("lastName");

                    b.Property<decimal>("NumberOfHours")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("number_of_hours");

                    b.Property<decimal>("Rete")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("rete");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("salary");

                    b.Property<DateTime?>("UpdateWorker")
                        .HasColumnType("datetime")
                        .HasColumnName("update_worker");

                    b.HasKey("IdWorker");

                    b.ToTable("worker");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.ArticleUser", b =>
                {
                    b.HasOne("Monuments_of_Mlynysk.Models.Article", "IdArticleNavigation")
                        .WithMany("ArticleUsers")
                        .HasForeignKey("IdArticle")
                        .HasConstraintName("FK_251")
                        .IsRequired();

                    b.HasOne("Monuments_of_Mlynysk.Models.User", "IdUserNavigation")
                        .WithMany("ArticleUsers")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK_255")
                        .IsRequired();

                    b.Navigation("IdArticleNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.Material", b =>
                {
                    b.HasOne("Monuments_of_Mlynysk.Models.Appointment", "IdAppointmentNavigation")
                        .WithMany("Materials")
                        .HasForeignKey("IdAppointment")
                        .HasConstraintName("FK_287")
                        .IsRequired();

                    b.HasOne("Monuments_of_Mlynysk.Models.CategoryMaterial", "IdCategoryMaterialNavigation")
                        .WithMany("Materials")
                        .HasForeignKey("IdCategoryMaterial")
                        .HasConstraintName("FK_296")
                        .IsRequired();

                    b.Navigation("IdAppointmentNavigation");

                    b.Navigation("IdCategoryMaterialNavigation");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.MaterialMonument", b =>
                {
                    b.HasOne("Monuments_of_Mlynysk.Models.Material", "IdMaterialNavigation")
                        .WithMany("MaterialMonuments")
                        .HasForeignKey("IdMaterial")
                        .HasConstraintName("FK_278")
                        .IsRequired();

                    b.HasOne("Monuments_of_Mlynysk.Models.Monument", "IdMonumentNavigation")
                        .WithMany("MaterialMonuments")
                        .HasForeignKey("IdMonument")
                        .HasConstraintName("FK_275")
                        .IsRequired();

                    b.Navigation("IdMaterialNavigation");

                    b.Navigation("IdMonumentNavigation");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.Monument", b =>
                {
                    b.HasOne("Monuments_of_Mlynysk.Models.Photo", "IdPhotoNavigation")
                        .WithMany("Monuments")
                        .HasForeignKey("IdPhoto")
                        .HasConstraintName("FK_178")
                        .IsRequired();

                    b.Navigation("IdPhotoNavigation");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.MonumentWorker", b =>
                {
                    b.HasOne("Monuments_of_Mlynysk.Models.Monument", "IdMonumentNavigation")
                        .WithMany("MonumentWorkers")
                        .HasForeignKey("IdMonument")
                        .HasConstraintName("FK_171")
                        .IsRequired();

                    b.HasOne("Monuments_of_Mlynysk.Models.Worker", "IdWorkerNavigation")
                        .WithMany("MonumentWorkers")
                        .HasForeignKey("IdWorker")
                        .HasConstraintName("FK_175")
                        .IsRequired();

                    b.Navigation("IdMonumentNavigation");

                    b.Navigation("IdWorkerNavigation");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.Photo", b =>
                {
                    b.HasOne("Monuments_of_Mlynysk.Models.CategoryPhoto", "IdCategoryPhotoNavigation")
                        .WithMany("Photos")
                        .HasForeignKey("IdCategoryPhoto")
                        .HasConstraintName("FK_187")
                        .IsRequired();

                    b.Navigation("IdCategoryPhotoNavigation");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.PhotoArticle", b =>
                {
                    b.HasOne("Monuments_of_Mlynysk.Models.Article", "IdArticleNavigation")
                        .WithMany("PhotoArticles")
                        .HasForeignKey("IdArticle")
                        .HasConstraintName("FK_202")
                        .IsRequired();

                    b.HasOne("Monuments_of_Mlynysk.Models.Photo", "IdPhotoNavigation")
                        .WithMany("PhotoArticles")
                        .HasForeignKey("IdPhoto")
                        .HasConstraintName("FK_198")
                        .IsRequired();

                    b.Navigation("IdArticleNavigation");

                    b.Navigation("IdPhotoNavigation");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.UserRole", b =>
                {
                    b.HasOne("Monuments_of_Mlynysk.Models.Role", "IdRoleNavigation")
                        .WithMany("UserRoles")
                        .HasForeignKey("IdRole")
                        .HasConstraintName("FK_245")
                        .IsRequired();

                    b.HasOne("Monuments_of_Mlynysk.Models.User", "IdUserNavigation")
                        .WithMany("UserRoles")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK_248")
                        .IsRequired();

                    b.Navigation("IdRoleNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.Appointment", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.Article", b =>
                {
                    b.Navigation("ArticleUsers");

                    b.Navigation("PhotoArticles");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.CategoryMaterial", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.CategoryPhoto", b =>
                {
                    b.Navigation("Photos");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.Material", b =>
                {
                    b.Navigation("MaterialMonuments");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.Monument", b =>
                {
                    b.Navigation("MaterialMonuments");

                    b.Navigation("MonumentWorkers");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.Photo", b =>
                {
                    b.Navigation("Monuments");

                    b.Navigation("PhotoArticles");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.User", b =>
                {
                    b.Navigation("ArticleUsers");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Monuments_of_Mlynysk.Models.Worker", b =>
                {
                    b.Navigation("MonumentWorkers");
                });
#pragma warning restore 612, 618
        }
    }
}
